name: Move issue to Backlog when label added

on:
  issues:
    types:
      - labeled

jobs:
  move_to_backlog:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Move issue to Backlog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROJECT_ID: "1" # Set your GitHub project ID here
          BACKLOG_COLUMN_ID: "394f8d2b" # Set the column ID for 'Backlog' here
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          ISSUE_NODE_ID=$(curl -H "Authorization: bearer $GITHUB_TOKEN" \
                              -X POST \
                              -H "Content-Type: application/json" \
                              -d '{"query":"query { repository(owner: \\"'${{ github.repository_owner }}'\\", name: \\"'${{ github.event.repository.name }}'\\") { issue(number: '$ISSUE_NUMBER') { id } } }"}' \
                              https://api.github.com/graphql | jq -r .data.repository.issue.id)
          
          # Gebe die Issue-Node-ID in der Konsole aus
          echo "The Issue Node ID is: $ISSUE_NODE_ID"

#          LABEL_NAME=${{ github.event.label.name }}
#
#          # Pr√ºfen, ob das Label korrekt ist
#          if [ "$LABEL_NAME" == "feature" ]; then
#            # GraphQL Mutation um den Status auf 'Backlog' zu setzen
#            curl -H "Authorization: bearer $GITHUB_TOKEN" \
#                 -X POST \
#                 -H "Content-Type: application/json" \
#                 -d '{"query":"mutation { updateProjectNextItemField(input: { projectId: \\"PVT_kwHOB16rWM4ApMGw\\", itemId: \\"'$ISSUE_NODE_ID'\\", fieldId: \\"PVTSSF_lAHOB16rWM4ApMGwzggoz7Y\\", value: \\"394f8d2b\\" }) { projectNextItem { id } } }"}' \
#                 https://api.github.com/graphql
          else
            echo "Label does not match the trigger label."
          fi
